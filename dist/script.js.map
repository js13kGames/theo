{"version":3,"sources":[" [synthetic:base] "," [synthetic:es6/util/inherits] "," [synthetic:util/defineproperty] "," [synthetic:util/global] "," [synthetic:util/polyfill] "," [synthetic:es6/array/fill] ","src/jsfxr.js","src/js/Camera.js","src/js/Game.js","src/js/Icon.js","src/js/Item.js","src/js/Scene.js","src/js/Util.js","src/js/Audio/Sfx.js","src/js/Gfx/Draw.js","src/js/Gfx/Sprite.js","src/js/Items/Boss.js","src/js/Items/Cog.js","src/js/Items/Door.js","src/js/Items/Evil.js","src/js/Items/Gate.js","src/js/Items/Hero.js","src/js/Items/Rod.js","src/js/Items/Room.js","src/js/Items/Win.js","src/js/Math/Line.js","src/js/Math/Vec.js","src/script.js"],"names":["SfxrParams","setSettings","this.setSettings","values","i","String","fromCharCode","totalTime","multiplier","SfxrSynth","_params","_envelopeLength0","_envelopeLength1","_envelopeLength2","_period","_maxPeriod","_slide","_deltaSlide","_changeAmount","_changeTime","_changeLimit","_squareDuty","_dutySweep","reset","this.reset","p","totalReset","this.totalReset","synthWave","this.synthWave","buffer","length","_filters","_hpFilterCutoff","_hpFilterDeltaCutoff","_lpFilterCutoff","_lpFilterDeltaCutoff","_lpFilterOn","_masterVolume","_minFreqency","_phaser","_phaserDeltaOffset","_phaserOffset","_repeatLimit","_sustainPunch","_vibratoAmplitude","_vibratoSpeed","_waveType","_envelopeLength","_envelopeOverLength0","_envelopeOverLength1","_envelopeOverLength2","_lpFilterDamping","_finished","_envelopeStage","_envelopeTime","_envelopeVolume","_hpFilterPos","_lpFilterDeltaPos","_lpFilterOldPos","_lpFilterPos","_periodTemp","_phase","_phaserInt","_phaserPos","_pos","_repeatTime","_superSample","_vibratoPhase","_phaserBuffer","Array","_noiseBuffer","Math","random","sin","j","n","_sample","abs","synth","window","settings","envelopeFullLength","data","Uint8Array","used","Uint16Array","dv","Uint32Array","Camera","constructor","ctx","size","sky","pos","Vec","resize","canvas","ratio","clientWidth","clientHeight","width","round","height","render","out","w","h","sw","sh","sx","x","sy","y","dx","dy","fillStyle","fillRect","drawImage","Game","draw","config","cam","match","location","search","store","JSON","parse","localStorage","getItem","index","parseInt","cfg","grid","margin","Sfx","add","update","scene","stoped","time","Date","now","won","next","load","hero","clone","sub","div","multiply","shift","started","setItem","stringify","door","room","Room","mobs","text","rows","split","forEach","row","cmd","substr","val","map","parseFloat","Hero","turn","glitch","Door","push","Cog","Evil","Boss","Rod","Win","Gate","seed","Scene","tap","jump","start","Icon","Draw","callback","color","grad","scale","to","begin","ellipse","fill","stroke","rect","end","merge","Item","pre","stop","exit","img","clear","mob","alive","play","$","query","element","document","querySelector","on","event","handler","name","addEventListener","trim","rnd","Math.rnd","max","min","jsfxr","AudioContext","webkitAudioContext","master","createGain","connect","destination","decodeAudioData","loop","source","createBufferSource","mixer","currentTime","rgb","font","value","shadow","blur","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","color0","color1","r","createRadialGradient","addColorStop","glin","x1","y1","x2","y2","createLinearGradient","save","restore","translate","rotate","angle","PI","composite","type","globalCompositeOperation","lineWidth","strokeStyle","clearRect","line","beginPath","moveTo","lineTo","closePath","undefined","rad1","rad2","ngon","num","a","b","cos","c","path","dots","dot","Image","src","toDataURL","onload","img.onload","call","back","say","measureText","fillText","sprite","dw","dh","Sprite","evil","rod","cog","boss","eye","dark","light","blue","dead","speed","velociy","frame","sfx","gain","bit","collide","dist","mag","pos1","pos2","Line","vec","lineDist","key","open","result","sec","floor","bound","minSpeed","maxSpeed","velocity","jumpSpeed","srcSlide","lines","indexOf","project","distance","norm","param","eq","sqrt","invert","zero","game","getContext","requestAnimationFrame","e","preventDefault","keyCode","href"],"mappings":"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","file":"script.js","sourcesContent":[null,null,null,null,null,null,"/**\r\n * SfxrParams\r\n *\r\n * Copyright 2010 Thomas Vian\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *\r\n * @author Thomas Vian\r\n */\r\n/** @constructor */\r\nfunction SfxrParams() {\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Settings String Methods\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Parses a settings array into the parameters\r\n   * @param array Array of the settings values, where elements 0 - 23 are\r\n   *                a: waveType\r\n   *                b: attackTime\r\n   *                c: sustainTime\r\n   *                d: sustainPunch\r\n   *                e: decayTime\r\n   *                f: startFrequency\r\n   *                g: minFrequency\r\n   *                h: slide\r\n   *                i: deltaSlide\r\n   *                j: vibratoDepth\r\n   *                k: vibratoSpeed\r\n   *                l: changeAmount\r\n   *                m: changeSpeed\r\n   *                n: squareDuty\r\n   *                o: dutySweep\r\n   *                p: repeatSpeed\r\n   *                q: phaserOffset\r\n   *                r: phaserSweep\r\n   *                s: lpFilterCutoff\r\n   *                t: lpFilterCutoffSweep\r\n   *                u: lpFilterResonance\r\n   *                v: hpFilterCutoff\r\n   *                w: hpFilterCutoffSweep\r\n   *                x: masterVolume\r\n   * @return If the string successfully parsed\r\n   */\r\n  this.setSettings = function(values)\r\n  {\r\n    for ( var i = 0; i < 24; i++ )\r\n    {\r\n      this[String.fromCharCode( 97 + i )] = values[i] || 0;\r\n    }\r\n\r\n    // I moved this here from the reset(true) function\r\n    if (this['c'] < .01) {\r\n      this['c'] = .01;\r\n    }\r\n\r\n    var totalTime = this['b'] + this['c'] + this['e'];\r\n    if (totalTime < .18) {\r\n      var multiplier = .18 / totalTime;\r\n      this['b']  *= multiplier;\r\n      this['c'] *= multiplier;\r\n      this['e']   *= multiplier;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * SfxrSynth\r\n *\r\n * Copyright 2010 Thomas Vian\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *\r\n * @author Thomas Vian\r\n */\r\n/** @constructor */\r\nfunction SfxrSynth() {\r\n  // All variables are kept alive through function closures\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Sound Parameters\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  this._params = new SfxrParams();  // Params instance\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Synth Variables\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  var _envelopeLength0, // Length of the attack stage\r\n      _envelopeLength1, // Length of the sustain stage\r\n      _envelopeLength2, // Length of the decay stage\r\n\r\n      _period,          // Period of the wave\r\n      _maxPeriod,       // Maximum period before sound stops (from minFrequency)\r\n\r\n      _slide,           // Note slide\r\n      _deltaSlide,      // Change in slide\r\n\r\n      _changeAmount,    // Amount to change the note by\r\n      _changeTime,      // Counter for the note change\r\n      _changeLimit,     // Once the time reaches this limit, the note changes\r\n\r\n      _squareDuty,      // Offset of center switching point in the square wave\r\n      _dutySweep;       // Amount to change the duty by\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Synth Methods\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Resets the runing variables from the params\r\n   * Used once at the start (total reset) and for the repeat effect (partial reset)\r\n   */\r\n  this.reset = function() {\r\n    // Shorter reference\r\n    var p = this._params;\r\n\r\n    _period       = 100 / (p['f'] * p['f'] + .001);\r\n    _maxPeriod    = 100 / (p['g']   * p['g']   + .001);\r\n\r\n    _slide        = 1 - p['h'] * p['h'] * p['h'] * .01;\r\n    _deltaSlide   = -p['i'] * p['i'] * p['i'] * .000001;\r\n\r\n    if (!p['a']) {\r\n      _squareDuty = .5 - p['n'] / 2;\r\n      _dutySweep  = -p['o'] * .00005;\r\n    }\r\n\r\n    _changeAmount =  1 + p['l'] * p['l'] * (p['l'] > 0 ? -.9 : 10);\r\n    _changeTime   = 0;\r\n    _changeLimit  = p['m'] == 1 ? 0 : (1 - p['m']) * (1 - p['m']) * 20000 + 32;\r\n  }\r\n\r\n  // I split the reset() function into two functions for better readability\r\n  this.totalReset = function() {\r\n    this.reset();\r\n\r\n    // Shorter reference\r\n    var p = this._params;\r\n\r\n    // Calculating the length is all that remained here, everything else moved somewhere\r\n    _envelopeLength0 = p['b']  * p['b']  * 100000;\r\n    _envelopeLength1 = p['c'] * p['c'] * 100000;\r\n    _envelopeLength2 = p['e']   * p['e']   * 100000 + 12;\r\n    // Full length of the volume envelop (and therefore sound)\r\n    // Make sure the length can be divided by 3 so we will not need the padding \"==\" after base64 encode\r\n    return ((_envelopeLength0 + _envelopeLength1 + _envelopeLength2) / 3 | 0) * 3;\r\n  }\r\n\r\n  /**\r\n   * Writes the wave to the supplied buffer ByteArray\r\n   * @param buffer A ByteArray to write the wave to\r\n   * @return If the wave is finished\r\n   */\r\n  this.synthWave = function(buffer, length) {\r\n    // Shorter reference\r\n    var p = this._params;\r\n\r\n    // If the filters are active\r\n    var _filters = p['s'] != 1 || p['v'],\r\n        // Cutoff multiplier which adjusts the amount the wave position can move\r\n        _hpFilterCutoff = p['v'] * p['v'] * .1,\r\n        // Speed of the high-pass cutoff multiplier\r\n        _hpFilterDeltaCutoff = 1 + p['w'] * .0003,\r\n        // Cutoff multiplier which adjusts the amount the wave position can move\r\n        _lpFilterCutoff = p['s'] * p['s'] * p['s'] * .1,\r\n        // Speed of the low-pass cutoff multiplier\r\n        _lpFilterDeltaCutoff = 1 + p['t'] * .0001,\r\n        // If the low pass filter is active\r\n        _lpFilterOn = p['s'] != 1,\r\n        // masterVolume * masterVolume (for quick calculations)\r\n        _masterVolume = p['x'] * p['x'],\r\n        // Minimum frequency before stopping\r\n        _minFreqency = p['g'],\r\n        // If the phaser is active\r\n        _phaser = p['q'] || p['r'],\r\n        // Change in phase offset\r\n        _phaserDeltaOffset = p['r'] * p['r'] * p['r'] * .2,\r\n        // Phase offset for phaser effect\r\n        _phaserOffset = p['q'] * p['q'] * (p['q'] < 0 ? -1020 : 1020),\r\n        // Once the time reaches this limit, some of the    iables are reset\r\n        _repeatLimit = p['p'] ? ((1 - p['p']) * (1 - p['p']) * 20000 | 0) + 32 : 0,\r\n        // The punch factor (louder at begining of sustain)\r\n        _sustainPunch = p['d'],\r\n        // Amount to change the period of the wave by at the peak of the vibrato wave\r\n        _vibratoAmplitude = p['j'] / 2,\r\n        // Speed at which the vibrato phase moves\r\n        _vibratoSpeed = p['k'] * p['k'] * .01,\r\n        // The type of wave to generate\r\n        _waveType = p['a'];\r\n\r\n    var _envelopeLength      = _envelopeLength0,     // Length of the current envelope stage\r\n        _envelopeOverLength0 = 1 / _envelopeLength0, // (for quick calculations)\r\n        _envelopeOverLength1 = 1 / _envelopeLength1, // (for quick calculations)\r\n        _envelopeOverLength2 = 1 / _envelopeLength2; // (for quick calculations)\r\n\r\n    // Damping muliplier which restricts how fast the wave position can move\r\n    var _lpFilterDamping = 5 / (1 + p['u'] * p['u'] * 20) * (.01 + _lpFilterCutoff);\r\n    if (_lpFilterDamping > .8) {\r\n      _lpFilterDamping = .8;\r\n    }\r\n    _lpFilterDamping = 1 - _lpFilterDamping;\r\n\r\n    var _finished = false,     // If the sound has finished\r\n        _envelopeStage    = 0, // Current stage of the envelope (attack, sustain, decay, end)\r\n        _envelopeTime     = 0, // Current time through current enelope stage\r\n        _envelopeVolume   = 0, // Current volume of the envelope\r\n        _hpFilterPos      = 0, // Adjusted wave position after high-pass filter\r\n        _lpFilterDeltaPos = 0, // Change in low-pass wave position, as allowed by the cutoff and damping\r\n        _lpFilterOldPos,       // Previous low-pass wave position\r\n        _lpFilterPos      = 0, // Adjusted wave position after low-pass filter\r\n        _periodTemp,           // Period modified by vibrato\r\n        _phase            = 0, // Phase through the wave\r\n        _phaserInt,            // Integer phaser offset, for bit maths\r\n        _phaserPos        = 0, // Position through the phaser buffer\r\n        _pos,                  // Phase expresed as a Number from 0-1, used for fast sin approx\r\n        _repeatTime       = 0, // Counter for the repeats\r\n        _sample,               // Sub-sample calculated 8 times per actual sample, averaged out to get the super sample\r\n        _superSample,          // Actual sample writen to the wave\r\n        _vibratoPhase     = 0; // Phase through the vibrato sine wave\r\n\r\n    // Buffer of wave values used to create the out of phase second wave\r\n    var _phaserBuffer = new Array(1024),\r\n        // Buffer of random values used to generate noise\r\n        _noiseBuffer  = new Array(32);\r\n    for (var i = _phaserBuffer.length; i--; ) {\r\n      _phaserBuffer[i] = 0;\r\n    }\r\n    for (var i = _noiseBuffer.length; i--; ) {\r\n      _noiseBuffer[i] = Math.random() * 2 - 1;\r\n    }\r\n\r\n    for (var i = 0; i < length; i++) {\r\n      if (_finished) {\r\n        return i;\r\n      }\r\n\r\n      // Repeats every _repeatLimit times, partially resetting the sound parameters\r\n      if (_repeatLimit) {\r\n        if (++_repeatTime >= _repeatLimit) {\r\n          _repeatTime = 0;\r\n          this.reset();\r\n        }\r\n      }\r\n\r\n      // If _changeLimit is reached, shifts the pitch\r\n      if (_changeLimit) {\r\n        if (++_changeTime >= _changeLimit) {\r\n          _changeLimit = 0;\r\n          _period *= _changeAmount;\r\n        }\r\n      }\r\n\r\n      // Acccelerate and apply slide\r\n      _slide += _deltaSlide;\r\n      _period *= _slide;\r\n\r\n      // Checks for frequency getting too low, and stops the sound if a minFrequency was set\r\n      if (_period > _maxPeriod) {\r\n        _period = _maxPeriod;\r\n        if (_minFreqency > 0) {\r\n          _finished = true;\r\n        }\r\n      }\r\n\r\n      _periodTemp = _period;\r\n\r\n      // Applies the vibrato effect\r\n      if (_vibratoAmplitude > 0) {\r\n        _vibratoPhase += _vibratoSpeed;\r\n        _periodTemp *= 1 + Math.sin(_vibratoPhase) * _vibratoAmplitude;\r\n      }\r\n\r\n      _periodTemp |= 0;\r\n      if (_periodTemp < 8) {\r\n        _periodTemp = 8;\r\n      }\r\n\r\n      // Sweeps the square duty\r\n      if (!_waveType) {\r\n        _squareDuty += _dutySweep;\r\n        if (_squareDuty < 0) {\r\n          _squareDuty = 0;\r\n        } else if (_squareDuty > .5) {\r\n          _squareDuty = .5;\r\n        }\r\n      }\r\n\r\n      // Moves through the different stages of the volume envelope\r\n      if (++_envelopeTime > _envelopeLength) {\r\n        _envelopeTime = 0;\r\n\r\n        switch (++_envelopeStage)  {\r\n          case 1:\r\n            _envelopeLength = _envelopeLength1;\r\n            break;\r\n          case 2:\r\n            _envelopeLength = _envelopeLength2;\r\n        }\r\n      }\r\n\r\n      // Sets the volume based on the position in the envelope\r\n      switch (_envelopeStage) {\r\n        case 0:\r\n          _envelopeVolume = _envelopeTime * _envelopeOverLength0;\r\n          break;\r\n        case 1:\r\n          _envelopeVolume = 1 + (1 - _envelopeTime * _envelopeOverLength1) * 2 * _sustainPunch;\r\n          break;\r\n        case 2:\r\n          _envelopeVolume = 1 - _envelopeTime * _envelopeOverLength2;\r\n          break;\r\n        case 3:\r\n          _envelopeVolume = 0;\r\n          _finished = true;\r\n      }\r\n\r\n      // Moves the phaser offset\r\n      if (_phaser) {\r\n        _phaserOffset += _phaserDeltaOffset;\r\n        _phaserInt = _phaserOffset | 0;\r\n        if (_phaserInt < 0) {\r\n          _phaserInt = -_phaserInt;\r\n        } else if (_phaserInt > 1023) {\r\n          _phaserInt = 1023;\r\n        }\r\n      }\r\n\r\n      // Moves the high-pass filter cutoff\r\n      if (_filters && _hpFilterDeltaCutoff) {\r\n        _hpFilterCutoff *= _hpFilterDeltaCutoff;\r\n        if (_hpFilterCutoff < .00001) {\r\n          _hpFilterCutoff = .00001;\r\n        } else if (_hpFilterCutoff > .1) {\r\n          _hpFilterCutoff = .1;\r\n        }\r\n      }\r\n\r\n      _superSample = 0;\r\n      for (var j = 8; j--; ) {\r\n        // Cycles through the period\r\n        _phase++;\r\n        if (_phase >= _periodTemp) {\r\n          _phase %= _periodTemp;\r\n\r\n          // Generates new random noise for this period\r\n          if (_waveType == 3) {\r\n            for (var n = _noiseBuffer.length; n--; ) {\r\n              _noiseBuffer[n] = Math.random() * 2 - 1;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Gets the sample from the oscillator\r\n        switch (_waveType) {\r\n          case 0: // Square wave\r\n            _sample = ((_phase / _periodTemp) < _squareDuty) ? .5 : -.5;\r\n            break;\r\n          case 1: // Saw wave\r\n            _sample = 1 - _phase / _periodTemp * 2;\r\n            break;\r\n          case 2: // Sine wave (fast and accurate approx)\r\n            _pos = _phase / _periodTemp;\r\n            _pos = (_pos > .5 ? _pos - 1 : _pos) * 6.28318531;\r\n            _sample = 1.27323954 * _pos + .405284735 * _pos * _pos * (_pos < 0 ? 1 : -1);\r\n            _sample = .225 * ((_sample < 0 ? -1 : 1) * _sample * _sample  - _sample) + _sample;\r\n            break;\r\n          case 3: // Noise\r\n            _sample = _noiseBuffer[Math.abs(_phase * 32 / _periodTemp | 0)];\r\n        }\r\n\r\n        // Applies the low and high pass filters\r\n        if (_filters) {\r\n          _lpFilterOldPos = _lpFilterPos;\r\n          _lpFilterCutoff *= _lpFilterDeltaCutoff;\r\n          if (_lpFilterCutoff < 0) {\r\n            _lpFilterCutoff = 0;\r\n          } else if (_lpFilterCutoff > .1) {\r\n            _lpFilterCutoff = .1;\r\n          }\r\n\r\n          if (_lpFilterOn) {\r\n            _lpFilterDeltaPos += (_sample - _lpFilterPos) * _lpFilterCutoff;\r\n            _lpFilterDeltaPos *= _lpFilterDamping;\r\n          } else {\r\n            _lpFilterPos = _sample;\r\n            _lpFilterDeltaPos = 0;\r\n          }\r\n\r\n          _lpFilterPos += _lpFilterDeltaPos;\r\n\r\n          _hpFilterPos += _lpFilterPos - _lpFilterOldPos;\r\n          _hpFilterPos *= 1 - _hpFilterCutoff;\r\n          _sample = _hpFilterPos;\r\n        }\r\n\r\n        // Applies the phaser effect\r\n        if (_phaser) {\r\n          _phaserBuffer[_phaserPos % 1024] = _sample;\r\n          _sample += _phaserBuffer[(_phaserPos - _phaserInt + 1024) % 1024];\r\n          _phaserPos++;\r\n        }\r\n\r\n        _superSample += _sample;\r\n      }\r\n\r\n      // Averages out the super samples and applies volumes\r\n      _superSample *= .125 * _envelopeVolume * _masterVolume;\r\n\r\n      // Clipping if too loud\r\n      buffer[i] = _superSample >= 1 ? 32767 : _superSample <= -1 ? -32768 : _superSample * 32767 | 0;\r\n    }\r\n\r\n    return length;\r\n  }\r\n}\r\n\r\n// Adapted from http://codebase.es/riffwave/\r\nvar synth = new SfxrSynth();\r\n// Export for the Closure Compiler\r\nwindow['jsfxr'] = function(settings) {\r\n  // Initialize SfxrParams\r\n  synth._params.setSettings(settings);\r\n  // Synthesize Wave\r\n  var envelopeFullLength = synth.totalReset();\r\n  var data = new Uint8Array(((envelopeFullLength + 1) / 2 | 0) * 4 + 44);\r\n  var used = synth.synthWave(new Uint16Array(data.buffer, 44), envelopeFullLength) * 2;\r\n  var dv = new Uint32Array(data.buffer, 0, 44);\r\n  // Initialize header\r\n  dv[0] = 0x46464952; // \"RIFF\"\r\n  dv[1] = used + 36;  // put total size here\r\n  dv[2] = 0x45564157; // \"WAVE\"\r\n  dv[3] = 0x20746D66; // \"fmt \"\r\n  dv[4] = 0x00000010; // size of the following\r\n  dv[5] = 0x00010001; // Mono: 1 channel, PCM format\r\n  dv[6] = 0x0000AC44; // 44,100 samples per second\r\n  dv[7] = 0x00015888; // byte rate: two bytes per sample\r\n  dv[8] = 0x00100002; // 16 bits per sample, aligned on every two bytes\r\n  dv[9] = 0x61746164; // \"data\"\r\n  dv[10] = used;      // put number of samples here\r\n\r\n  return data.buffer;\r\n}","/**\r\n * Camera renderer\r\n */\r\nclass Camera {\r\n\r\n    /**\r\n     * @param {CanvasRenderingContext2D} ctx\r\n     * @param {Number} size\r\n     * @param {String|CanvasGradient} sky\r\n     */\r\n    constructor(ctx, size, sky) {\r\n        this.ctx = ctx;\r\n        this.sky = sky;\r\n        this.size = size;\r\n        this.pos = new Vec();\r\n        this.resize();\r\n    }\r\n\r\n    resize() {\r\n        const ctx = this.ctx;\r\n        const size = this.size;\r\n        const canvas = ctx.canvas;\r\n        let w = canvas.clientWidth,\r\n            h = canvas.clientHeight,\r\n            ratio = w / h;\r\n        if (ratio > 1) {\r\n            canvas.width = Math.round(size * ratio);\r\n            canvas.height = size;\r\n        } else {\r\n            canvas.width = size;\r\n            canvas.height = Math.round(size / ratio);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {CanvasRenderingContext2D} ctx\r\n     */\r\n    render(ctx) {\r\n        const out = this.ctx;\r\n        const canvas = out.canvas;\r\n        let w = canvas.width,\r\n            h = canvas.height,\r\n            sw = ctx.canvas.width,\r\n            sh = ctx.canvas.width,\r\n            sx = Math.round(this.pos.x) - Math.round(w / 2),\r\n            sy = Math.round(this.pos.y) - Math.round(h / 2),\r\n            dx = 0,\r\n            dy = 0;\r\n        out.fillStyle = this.sky;\r\n        out.fillRect(0, 0, w, h);\r\n        if (sx < 0) {\r\n            dx = -sx;\r\n            sx = 0;\r\n        }\r\n        if (sy < 0) {\r\n            dy = -sy;\r\n            sy = 0;\r\n        }\r\n        if (sx + w > sw) {\r\n            w = sw - sx;\r\n        }\r\n        if (sy + h > sh) {\r\n            h = sh - sy;\r\n        }\r\n        if (w > 0 && h > 0) {\r\n            out.drawImage(ctx.canvas, sx, sy, w, h, dx, dy, w, h);\r\n        }\r\n    }\r\n\r\n}\r\n","/**\r\n * Game class\r\n */\r\nclass Game {\r\n\r\n    /**\r\n     * @param {Draw} draw\r\n     * @param {String[]} config\r\n     * @param {Camera} cam\r\n     */\r\n    constructor(draw, config, cam) {\r\n        const match = location.search.match(/^\\?(\\d+)$/);\r\n        this.store = JSON.parse(localStorage.getItem(\"theos\") || \"{\\\"time\\\": 0,\\\"index\\\":0}\");\r\n        this.index = parseInt(match ? match[1] : this.store.index);\r\n        this.draw = draw;\r\n        this.cam = cam;\r\n        this.cfg = config;\r\n        this.grid = 72;\r\n        this.margin = 40;\r\n        Sfx.add(\"key\", [0,,0.035,,0.49,0.17,,0.37,,,,,,0.52,,0.44,,,1,,,,,0.5])\r\n            .add(\"slide\", [3,0.52,1,,1,1,1,0.6599,,,,-1,,,,,,,0.44,,,0.66,0.5,0.4])\r\n            .add(\"jump\", [0,,0.16,,0.18,0.27,,0.21,,,,,,0.22,,,,,0.74,,,,,0.5])\r\n            .add(\"won\", [2,0.005,0.18,0.13,0.44,0.51,,0.35,0.19,0.02,0.81,-0.8,0.89,0.44,,0.49,-0.78,-0.46,0.99,,-0.045,0.012,0.004,0.35])\r\n            .add(\"lose\", [1,0.003,0.03,0.02,0.87,0.22,,0.016,-0.16,,0.08,-0.36,0.067,,0.75,0.04,-0.75,0.001,0.73,-0.016,0.89,0.24,-0.19,0.5])\r\n            .add(\"boss\", [1,0.17,0.19,0.41,0.38,0.14,,0.001,0.001,,0.96,0.77,0.31,,0.077,0.66,0.5,0.64,0.99,0.04,0.38,0.05,0.0006,0.4])\r\n            .add(\"cog\", [0,,0.39,,,0.27,,,,0.53,0.72,,-0.8234,-0.0142,-0.0921,,,,1,,-0.0417,,,0.3]);\r\n    }\r\n\r\n    update() {\r\n        const scene = this.scene;\r\n        const cam = this.cam;\r\n        let size = 300;\r\n        scene.update();\r\n        if (scene.stoped) {\r\n            let time = Date.now() - scene.stoped;\r\n            if (time > 1000) {\r\n                if (scene.won) {\r\n                    this.next();\r\n                } else {\r\n                    this.load();\r\n                }\r\n            } else {\r\n                size -= time / 20;\r\n            }\r\n        }\r\n        if (cam && cam.size != size) {\r\n            cam.size = size;\r\n            cam.resize();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const scene = this.scene;\r\n        const hero = scene.hero;\r\n        const draw = this.draw;\r\n        const cam = this.cam;\r\n        scene.render(draw);\r\n        if (cam) {\r\n            cam.pos.add(hero.pos.clone().sub(cam.pos).div(4));\r\n            cam.render(draw.ctx);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convert grid coordinated\r\n     * @param {Array} values\r\n     * @param {Number} x offset\r\n     * @param {Number} y offset\r\n     * @returns {Vec}\r\n     */\r\n    pos(values, y, x) {\r\n        if (values.length < 2) {\r\n            return null;\r\n        }\r\n        const margin = this.margin;\r\n        const grid = this.grid;\r\n        x = margin + (x || grid / 2);\r\n        y = margin + (y || grid / 2);\r\n        return new Vec(values.shift(), values.shift())\r\n            .multiply(grid)\r\n            .add(x, y);\r\n    }\r\n\r\n    /**\r\n     * Step the scene index\r\n     */\r\n    next() {\r\n        const store = this.store;\r\n        const scene = this.scene;\r\n        store.time += scene.stoped - scene.started;\r\n        if (++this.index >= this.cfg.length) {\r\n            this.index = 0;\r\n            store.time = 0;\r\n        }\r\n        this.load();\r\n        store.index = this.index;\r\n        localStorage.setItem(\"theos\", JSON.stringify(store));\r\n    }\r\n\r\n    /**\r\n     * Load the actual scene\r\n     */\r\n    load() {\r\n        let hero,\r\n            door,\r\n            room = new Room(this.grid, this.margin),\r\n            mobs = [],\r\n            text = [],\r\n            index = this.index,\r\n            rows = this.cfg[index].split(\"|\"),\r\n            canvas = this.draw.ctx.canvas;\r\n        rows.forEach((row) => {\r\n            let cmd = row.substr(0, 1),\r\n                val = row.substr(1).split(\",\").map(parseFloat);\r\n            switch (cmd) {\r\n            case \"H\":\r\n                hero = new Hero(this.pos(val, 60), new Vec(canvas.width, canvas.height));\r\n                if (val[0]) {\r\n                    hero.turn();\r\n                }\r\n                break;\r\n            case \"M\":\r\n                room.map(val);\r\n                break;\r\n            case \"G\":\r\n                room.glitch = val;\r\n                break;\r\n            case \"D\":\r\n                door = new Door(this.pos(val, 56), this.pos(val, 56));\r\n                break;\r\n            case \"C\":\r\n                mobs.push(new Cog(this.pos(val, 56), this.pos(val, 56)));\r\n                break;\r\n            case \"E\":\r\n                mobs.push(new Evil(this.pos(val)));\r\n                break;\r\n            case \"B\":\r\n                mobs.push(new Boss(this.pos(val)));\r\n                break;\r\n            case \"R\":\r\n                mobs.push(new Rod(this.pos(val)));\r\n                break;\r\n            case \"W\":\r\n                mobs.push(new Win(this.pos(val)));\r\n                break;\r\n            case \"X\":\r\n                door = new Gate(this.pos(val), this.store.time);\r\n                break;\r\n            case \"#\":\r\n                text.push(row.substr(1));\r\n                break;\r\n            }\r\n        });\r\n        Math.seed = index;\r\n        this.scene = new Scene(hero, room, door, mobs, text);\r\n        if (this.cam) {\r\n            this.cam.pos = hero.pos.clone();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Input handler\r\n     */\r\n    tap() {\r\n        const scene = this.scene;\r\n        if (!scene.started) {\r\n            scene.start();\r\n        } else if (!scene.stoped) {\r\n            scene.hero.jump();    \r\n        }\r\n    }\r\n\r\n}","class Icon {\r\n\r\n    constructor(ctx) {\r\n        this.draw = new Draw(ctx);\r\n    }\r\n\r\n    render(callback) {\r\n        const draw = this.draw;\r\n        const color = draw.grad(\"#fc0\", \"#960\", 12, -4, -4);\r\n        draw.scale(8)\r\n            .to(12, 12)\r\n            .begin()\r\n            .ellipse(11.3)\r\n            .fill(color)\r\n            .stroke()\r\n            .to(-3, 5)\r\n            .rect(6, 1, 0)\r\n            .end()\r\n            .to(0, -3)\r\n            .ellipse(5)\r\n            .fill(1)\r\n            .ellipse(2)\r\n            .fill(0)\r\n            .merge(false, callback);\r\n    }\r\n}","/**\r\n * Abstract game object class\r\n */\r\nclass Item {\r\n\r\n    /**\r\n     * @param {Vec} pos\r\n     */\r\n    constructor(pos) {\r\n        this.pos = pos;\r\n    }\r\n\r\n    /**\r\n     * Pre render\r\n     * @param {Draw} draw\r\n     */\r\n    pre(draw) {}\r\n\r\n    /**\r\n     * On scene start\r\n     */\r\n    start() {}\r\n\r\n    /**\r\n     * On scene stop\r\n     */\r\n    stop() {}\r\n\r\n    /**\r\n     * On scene update\r\n     * @param {Hero} hero\r\n     */\r\n    update(hero) {}\r\n\r\n    /**\r\n     * On scene render\r\n     * @param {Draw} draw\r\n     */\r\n    render(draw) {}\r\n    \r\n}","/**\r\n * Game scene class\r\n */\r\nclass Scene {\r\n\r\n    /**\r\n     * @param {Hero} hero\r\n     * @param {Room} room\r\n     * @param {Door} exit\r\n     * @param {Item[]} mobs\r\n     * @param {String[]} text\r\n     */\r\n    constructor(hero, room, exit, mobs, text) {\r\n        this.room = room;\r\n        this.hero = hero;\r\n        this.exit = exit;\r\n        this.mobs = mobs || [];\r\n        this.text = text || [];\r\n        this.won = false;\r\n        this.img = false;\r\n        this.started = 0;\r\n        this.stoped = 0;\r\n    }\r\n\r\n    /**\r\n     * @param {Draw} draw\r\n     */\r\n    render(draw) {\r\n        draw.clear();\r\n        if (!this.img) {\r\n            this.room.pre(draw);\r\n            this.exit.pre(draw);\r\n            this.mobs.forEach((mob) => mob.pre(draw));\r\n            this.img = draw.merge();\r\n        } else {\r\n            draw.img(this.img);\r\n        }\r\n        this.exit.render(draw);\r\n        this.mobs.forEach((mob) => mob.render(draw));\r\n        this.hero.render(draw);\r\n        if (!this.started && this.text.length > 0) {\r\n            draw.begin()\r\n                .to(this.hero.pos.clone().add(-16, -22))\r\n                .text(this.text, 0, 5, 1)\r\n                .end();\r\n        }\r\n    }\r\n\r\n    start() {\r\n        this.started = Date.now();\r\n        this.hero.start();\r\n        this.exit.start();\r\n        this.mobs.forEach((mob) => mob.start());\r\n    }\r\n\r\n    stop() {\r\n        this.stoped = Date.now();\r\n        this.hero.stop();\r\n        this.exit.stop();\r\n        this.mobs.forEach((mob) => mob.stop());\r\n    }\r\n\r\n    update() {\r\n        const hero = this.hero;\r\n        const room = this.room;\r\n        const exit = this.exit;\r\n        if (this.stoped || !this.started) {\r\n            return;\r\n        }\r\n        hero.update(room);\r\n        this.mobs.forEach((mob) => mob.update(hero, room));\r\n        if (!hero.alive) {\r\n            Sfx.play(\"lose\");\r\n            this.stop();\r\n        } else if (exit.update(hero)) {\r\n            this.won = true;\r\n            Sfx.play(\"won\");\r\n            this.stop();\r\n        }\r\n    }\r\n\r\n}","/**\r\n * DOM query selector\r\n * @param {String} query\r\n * @param {DOMElement} element\r\n * @returns {DOMElement}\r\n */\r\nfunction $(query, element) {\r\n    element = element || document;\r\n    return element.querySelector(query);\r\n}\r\n\r\n/**\r\n * Attach event listener\r\n * @param {DOMElement} element\r\n * @param {String} event\r\n * @param {Function} handler\r\n */\r\nfunction on(element, event, handler) {\r\n    event.split(\",\").forEach((name) => {\r\n        element.addEventListener(name.trim(), handler, false);\r\n    });\r\n}\r\n\r\n/**\r\n * Random seed\r\n */\r\nMath.seed = 6;\r\n\r\n/**\r\n * Seed random number generator\r\n */\r\nMath.rnd = function(max, min) {\r\n    max = max || 1;\r\n    min = min || 0;\r\n    Math.seed = (Math.seed * 9301 + 49297) % 233280;\r\n    return min + (Math.seed / 233280) * (max - min);\r\n};","/**\r\n * Sound FX module\r\n */\r\nclass Sfx {\r\n\r\n    /**\r\n     * @param {String} name\r\n     * @param {Array} config\r\n     */\r\n    static add(name, config) {\r\n        const data = jsfxr(config);\r\n        if (!Sfx.ctx) {\r\n            Sfx.ctx = window.AudioContext\r\n                ? new AudioContext()\r\n                : new webkitAudioContext();\r\n            Sfx.buffer = {};\r\n            Sfx.master = Sfx.ctx.createGain();\r\n            Sfx.master.connect(Sfx.ctx.destination);\r\n        }\r\n        Sfx.ctx.decodeAudioData(data, (buffer) => {\r\n            Sfx.buffer[name] = buffer;\r\n        });\r\n        return Sfx;\r\n    }\r\n\r\n    /**\r\n     * @param {String} name\r\n     * @param {Boolean} loop\r\n     */\r\n    static play(name, loop) {\r\n        if (!Sfx.buffer[name]) {\r\n            return;\r\n        }\r\n        const source = Sfx.ctx.createBufferSource();\r\n        source.mixer = Sfx.ctx.createGain();\r\n        source.mixer.connect(Sfx.master);\r\n        source.loop = loop || false;\r\n        source.buffer = Sfx.buffer[name];\r\n        source.connect(source.mixer);\r\n        source.start(Sfx.ctx.currentTime);\r\n        return source;\r\n    }\r\n\r\n}","/**\r\n * Canvas draw tool\r\n */\r\nclass Draw {\r\n\r\n    /**\r\n     * @param {CanvasRenderingContext2D} ctx\r\n     */\r\n    constructor(ctx) {\r\n        this.ctx = ctx;\r\n        this.rgb = [\r\n            \"#000\",                    // 0 = black\r\n            \"#fff\",                    // 1 = white\r\n            \"#666\",                    // 2 = dark grey\r\n            \"#999\",                    // 3 = grey\r\n            \"#ccc\",                    // 4 = light gray\r\n            \"rgba(192,192,192,.9)\"\r\n        ];\r\n        ctx.font = \"13px sans-serif\";\r\n    }\r\n\r\n    /**\r\n     * @param {Number|String|CanvasGradient} value\r\n     */\r\n    color(value) {\r\n        value = value || 0;\r\n        return value in this.rgb ? this.rgb[value] : value;\r\n    }\r\n\r\n    /**\r\n     * @param {Number|String|CanvasGradient} color\r\n     * @param {Number} blur\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     */\r\n    shadow(color, blur, x, y) {\r\n        const ctx = this.ctx;\r\n        ctx.shadowColor = this.color(color || 0);\r\n        ctx.shadowBlur = blur || 3;\r\n        ctx.shadowOffsetX = x || 0;\r\n        ctx.shadowOffsetY = y || 0;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Radial gradient\r\n     * @param {Number|String|CanvasGradient} color0\r\n     * @param {Number|String|CanvasGradient} color1\r\n     * @param {Number} r\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     */\r\n    grad(color0, color1, r, x, y) {\r\n        const ctx = this.ctx;\r\n        const color = ctx.createRadialGradient(x || 0, y || 0, 0, 0, 0, r);\r\n        color.addColorStop(0, color0);\r\n        color.addColorStop(1, color1);\r\n        return color;\r\n    }\r\n\r\n    /**\r\n     * Linear gradient\r\n     * @param {Number|String|CanvasGradient} color0\r\n     * @param {Number|String|CanvasGradient} color1\r\n     * @param {Number} x1\r\n     * @param {Number} y1\r\n     * @param {Number} x2\r\n     * @param {Number} y2\r\n     */\r\n    glin(color0, color1, x1, y1, x2, y2) {\r\n        const ctx = this.ctx;\r\n        const color = ctx.createLinearGradient(x1, y1, x2, y2);\r\n        color.addColorStop(0, color0);\r\n        color.addColorStop(1, color1);\r\n        return color;\r\n    }\r\n\r\n    /**\r\n     * Context save\r\n     */\r\n    begin() {\r\n        this.ctx.save();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Context restore\r\n     */\r\n    end() {\r\n        this.ctx.restore();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     */\r\n    scale(x, y) {\r\n        this.ctx.scale(x, y || x);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     */\r\n    to(x, y) {\r\n        if (x instanceof Vec) {\r\n            y = x.y;\r\n            x = x.x;\r\n        }\r\n        this.ctx.translate(x, y);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {Number} angle\r\n     */\r\n    rotate(angle) {\r\n        this.ctx.rotate(angle * Math.PI / 180);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Composition type\r\n     * @param {String} type\r\n     */\r\n    composite(type) {\r\n        this.ctx.globalCompositeOperation = type || \"source-over\";\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {Number|String|CanvasGradient} color\r\n     */\r\n    fill(color) {\r\n        const ctx = this.ctx;\r\n        ctx.fillStyle = this.color(color);\r\n        ctx.fill();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {Number|String|CanvasGradient} color\r\n     * @param {Number} size\r\n     */\r\n    stroke(color, size) {\r\n        const ctx = this.ctx;\r\n        ctx.lineWidth = size || 1;\r\n        ctx.strokeStyle = this.color(color);\r\n        ctx.stroke();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     */\r\n    clear(width, height) {\r\n        const canvas = this.ctx.canvas;\r\n        this.ctx.clearRect(0, 0, width || canvas.width, height || canvas.height);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     */\r\n    line(x, y) {\r\n        if (x instanceof Vec) {\r\n            y = x.y;\r\n            x = x.x;\r\n        }\r\n        const ctx = this.ctx;\r\n        ctx.beginPath();\r\n        ctx.moveTo(0, 0);\r\n        ctx.lineTo(x, y);\r\n        ctx.closePath();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     * @param {Number|String|CanvasGradient} color\r\n     */\r\n    rect(width, height, color) {\r\n        const ctx = this.ctx;\r\n        if (color !== undefined) {\r\n            ctx.fillStyle = this.color(color);\r\n            ctx.fillRect(0, 0, width, height);\r\n            return this;\r\n        }\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, width, height);\r\n        ctx.closePath();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {Number} rad1\r\n     * @param {Number} rad2\r\n     * @param {Number} angle\r\n     */\r\n    ellipse(rad1, rad2, angle) {\r\n        const ctx = this.ctx;\r\n        ctx.beginPath();\r\n        ctx.ellipse(0, 0, rad1, rad2 || rad1, angle || 0, 0, 2 * Math.PI);\r\n        ctx.closePath();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * NGon draw\r\n     * @param {Number} num\r\n     * @param {Number} rad1\r\n     * @param {Number} rad2\r\n     */\r\n    ngon(num, rad1, rad2) {\r\n        const ctx = this.ctx;\r\n        ctx.beginPath();\r\n        for (let i = 0; i < num; i++) {\r\n            let a = Math.PI * 2 / num;\r\n            if (i > 0) {\r\n                let b = a * i;\r\n                ctx.lineTo(Math.sin(b) * rad1, Math.cos(b) * rad1);\r\n            } else {\r\n                ctx.moveTo(0, rad1);\r\n            }\r\n            if (rad2) {\r\n                let c = a * (i + 0.5);\r\n                ctx.lineTo(Math.sin(c) * rad2, Math.cos(c) * rad2);\r\n            }\r\n        }\r\n        ctx.closePath();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {Vec[]} dots\r\n     */\r\n    path(dots) {\r\n        const ctx = this.ctx;\r\n        let dot = dots[0];\r\n        ctx.beginPath();\r\n        ctx.moveTo(dot.x, dot.y);\r\n        for (let i = 1; i < dots.length; i++) {\r\n            dot = dots[i];\r\n            ctx.lineTo(dot.x, dot.y);\r\n        }\r\n        ctx.closePath();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Save image\r\n     * @param {Boolean} store use as sprite\r\n     * @param {Function} callback on loaded\r\n     */\r\n    merge(store, callback) {\r\n        const img = new Image();\r\n        img.src = this.ctx.canvas.toDataURL();\r\n        if (store) {\r\n            this.store = img;\r\n        }\r\n        if (callback) {\r\n            img.onload = () => callback.call(img);\r\n        }\r\n        return img;\r\n    }\r\n\r\n    /**\r\n     * Text message\r\n     * @param {String} value\r\n     * @param {Number|String|CanvasGradient} color\r\n     * @param {Number|String|CanvasGradient} back\r\n     * @param {Boolean} say\r\n     */\r\n    text(value, color, back, say) {\r\n        const ctx = this.ctx;\r\n        let line = 14,\r\n            width = 0,\r\n            height = 0;\r\n        if (!(value instanceof Array)) {\r\n            value = [value];\r\n        }\r\n        value.forEach((row) => {\r\n            let size = ctx.measureText(row);\r\n            if (size.width > width) {\r\n                width = size.width;\r\n            }\r\n        });\r\n        height = line * value.length;\r\n        this.begin();\r\n        if (say) {\r\n            this.ngon(3, 5)\r\n                .fill(back)\r\n                .to(-15, -7-height);\r\n        }\r\n        this.rect(width + 10, height + 6, back);\r\n        ctx.fillStyle = this.color(color);\r\n        for (let i = 0; i < value.length; i++) {\r\n            ctx.fillText(value[i], 5, i * line + 14);\r\n        }\r\n        return this.end();\r\n    }\r\n\r\n    /**\r\n     * @param {Image} img\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @param {Number} w\r\n     * @param {Number} h\r\n     */\r\n    img(img, x, y, w, h) {\r\n        this.ctx.drawImage(img, x || 0, y || 0, w || img.width, h || img.height);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {Number} sx\r\n     * @param {Number} sy\r\n     * @param {Number} sw\r\n     * @param {Number} sh\r\n     * @param {Number} dx\r\n     * @param {Number} dy\r\n     * @param {Number} dw\r\n     * @param {Number} dh\r\n     */\r\n    sprite(sx, sy, sw, sh, dx, dy, dw, dh) {\r\n        this.ctx.drawImage(this.store, Math.round(sx), Math.round(sy), sw, sh, Math.round(dx || 0), Math.round(dy || 0), dw || sw, dh || sh);\r\n        return this;\r\n    }\r\n\r\n}\r\n","/**\r\n * Sprite generator class\r\n */\r\nclass Sprite {\r\n\r\n    /**\r\n     * @param {Draw} draw\r\n     */\r\n    constructor(draw) {\r\n        this.draw = draw;\r\n    }\r\n\r\n    /**\r\n     * @param {Function} callback\r\n     */\r\n    render(callback) {\r\n        const draw = this.draw;\r\n        draw.begin();\r\n        for (let y=1; y>-2; y--) {\r\n            for (let x=-1; x<2; x++) {\r\n                draw.begin().to(x*24+24, y*24+24);\r\n                this.hero(x, y);\r\n                draw.end();\r\n                draw.begin().to(x*24+120, y*24+24);\r\n                this.evil(x, y);\r\n                draw.end();\r\n            }\r\n        }\r\n\r\n        draw.begin().to(72, 0);\r\n        this.hero(0, 0, true);\r\n        draw.end();\r\n\r\n        draw.begin().to(168, 0);\r\n        this.rod(0, 0, true);\r\n        draw.end();\r\n\r\n        draw.to(0, 72);\r\n        for (let a=0; a<3; a++) {\r\n            draw.begin().to(a * 32, 0);\r\n            this.cog(a * 10);\r\n            draw.end();\r\n        }\r\n\r\n        draw.to(0, 32);\r\n        this.door();\r\n\r\n        draw.to(0, 32);\r\n        for (let a=0; a<6; a++) {\r\n            draw.begin().to(a * 72, 0);\r\n            this.boss(a * 15, a / 2);\r\n            draw.end();\r\n        }\r\n\r\n        draw.end().merge(true, callback);\r\n    }\r\n\r\n    /**\r\n     * Sentinel sprites\r\n     */\r\n    boss(angle, eye) {\r\n        let dark = \"#339\",\r\n            light = \"#66c\";\r\n        this.draw\r\n            .begin()\r\n            .to(36, 36)\r\n            .rotate(angle)\r\n            .to(-6, -32)\r\n            .rect(12, 64, dark)\r\n            .to(-26, 26)\r\n            .rect(64, 12, dark)\r\n            .end()\r\n\r\n            .begin()\r\n            .to(36, 36)\r\n            .rotate(angle + 45)\r\n            .to(-6, -32)\r\n            .rect(12, 64, light)\r\n            .to(-26, 26)\r\n            .rect(64, 12, light)\r\n            .end()\r\n            \r\n            .begin()\r\n            .to(16, 20)\r\n            .rect(40, 32)\r\n            .fill(light)\r\n            .stroke(0)\r\n            .to(12, 10)\r\n            .rect(16, 12, 1)\r\n            .to(3 + eye / 2, 2 + eye / 2)\r\n            .rect(10 - eye, 8 - eye, 0)\r\n            .end();\r\n    }\r\n\r\n    /**\r\n     * Door and key sprites\r\n     */\r\n    door() {\r\n        let blue = \"#669\",\r\n            dark = \"#003\";\r\n        this.draw\r\n            .begin()\r\n            .rect(24, 32, 0)\r\n            .to(1, 1)\r\n            .rect(22, 30, \"#960\")\r\n            .to(14, 14)\r\n            .rect(5, 2, 0)\r\n            .end()\r\n\r\n            .begin()\r\n            .to(24, 0)\r\n            .rect(24, 32, 0)\r\n            .to(12, 19)\r\n            .rect(11, 12, 2)\r\n            .to(-6, 6)\r\n            .rect(17, 6, 3)\r\n            .end()\r\n\r\n            .begin()\r\n            .to(60, 8)\r\n            .begin()\r\n            .to(-7, 16)\r\n            .rect(6, 8, dark)\r\n            .to(1, 1)\r\n            .rect(4, 6, blue)\r\n            .end()\r\n            .begin()\r\n            .to(-3, 0)\r\n            .rect(6, 24, dark)\r\n            .to(1, 1)\r\n            .rect(4, 22, blue)\r\n            .end()\r\n            .ellipse(10.5, 7)\r\n            .fill(blue)\r\n            .stroke(dark)\r\n            .ellipse(5, 3)\r\n            .composite(\"destination-out\")\r\n            .fill(1)\r\n            .composite()\r\n            .stroke(dark)\r\n            .end();\r\n    }\r\n\r\n    /**\r\n     * Cogs\r\n     * @param {Number} a\r\n     */\r\n    cog(a) {\r\n        const draw = this.draw;\r\n        const color = draw.grad(\"#ccc\", \"#666\", 16);\r\n        draw.begin()\r\n            .to(16, 16)\r\n            .rotate(a)\r\n            .ngon(15, 15.3, 12)\r\n            .fill(color)\r\n            .stroke()\r\n            .ellipse(3)\r\n            .fill(0)\r\n            .end();\r\n    }\r\n\r\n    /**\r\n     * Theodor\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @param {Boolean} dead\r\n     */\r\n    hero(x, y, dead) {\r\n        const draw = this.draw;\r\n        const color = draw.grad(\"#fc0\", \"#960\", 12, -4, -4);\r\n        draw.to(12, 12)\r\n            .begin()\r\n            .ellipse(11.3)\r\n            .fill(color)\r\n            .stroke()\r\n            .to(-3-x, 5+y)\r\n            .rect(6, 1, 0)\r\n            .end();\r\n        if (dead) {\r\n            draw.to(-4, -2)\r\n                .rect(8, 2, 0);\r\n        } else {\r\n            draw.to(x, y-3)\r\n                .ellipse(5)\r\n                .fill(1)\r\n                .to(x, y)\r\n                .ellipse(2)\r\n                .fill(0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The Infected Ones\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     */\r\n    evil(x, y) {\r\n        const draw = this.draw;\r\n        const color = draw.grad(\"#0c0\", \"#060\", 12, -4, -4);\r\n        draw.to(12, 12)\r\n            .begin()\r\n            .ngon(20, 11.5, 10)\r\n            .fill(color)\r\n            .stroke()\r\n            .to(x, y)\r\n            .ellipse(4.5)\r\n            .fill(1)\r\n            .to(x, y)\r\n            .ellipse(2)\r\n            .fill(0)\r\n            .end();\r\n    }\r\n\r\n    /**\r\n     * Mr Rodman\r\n     */\r\n    rod() {\r\n        this.draw\r\n            .begin()\r\n            .to(4, 0)\r\n            .rect(16, 48, 0)\r\n            .to(1, 1)\r\n            .rect(14, 46, 3)\r\n            .to(2, 10)\r\n            .rect(10, 10, 1)\r\n            .to(3, 3)\r\n            .rect(4, 4, 0)\r\n            .to(0, 16)\r\n            .rect(4, 1, 0)\r\n            .end();\r\n    }\r\n}\r\n","/**\r\n * The Sentinel\r\n */\r\nclass Boss extends Item {\r\n\r\n    /**\r\n     * @param {Vec} pos\r\n     */\r\n    constructor(pos) {\r\n        super(pos);\r\n        this.size = 32;\r\n        this.speed = new Vec();\r\n        this.velociy = 1;\r\n        this.frame = 0;\r\n    }\r\n\r\n    start() {\r\n        const sfx = Sfx.play(\"boss\", true);\r\n        sfx.mixer.gain.value = 0;\r\n        this.sfx = sfx;\r\n    }\r\n\r\n    stop() {\r\n        this.sfx.stop();\r\n    }\r\n\r\n    /**\r\n     * @param {Hero} hero\r\n     * @param {Room} room\r\n     */\r\n    update(hero, room) {\r\n        this.speed = hero.pos.clone().sub(this.pos).bit().multiply(this.velociy);\r\n        this.pos.x += this.speed.x;\r\n        room.collide(this.pos, this.size);\r\n        this.pos.y += this.speed.y;\r\n        room.collide(this.pos, this.size);\r\n        let dist = hero.pos.clone().sub(this.pos).mag(),\r\n            gain = 1 - dist / 300;\r\n        this.sfx.mixer.gain.value = gain > .1 ? gain : .1;\r\n        if (dist < this.size + hero.size) {\r\n            hero.alive = false;\r\n        }\r\n        this.frame += .5;\r\n    }\r\n\r\n    /**\r\n     * @param {Draw} draw\r\n     */\r\n    render(draw) {\r\n        const pos = this.pos.clone().sub(36);\r\n        const frame = Math.round(this.frame) % 6;\r\n        draw.sprite(frame * 72, 136, 72, 72, pos.x, pos.y);\r\n    }\r\n\r\n}","/**\r\n * Cogs\r\n */\r\nclass Cog extends Item {\r\n\r\n    /**\r\n     * @param {Vec} pos1 start\r\n     * @param {Vec} pos2 end\r\n     */\r\n    constructor(pos1, pos2) {\r\n        super(pos1.clone());\r\n        this.line = pos2 ? new Line(pos1, pos2) : null;\r\n        this.size = 16;\r\n        this.speed = 1;\r\n        this.frame = 0;\r\n    }\r\n\r\n    start() {\r\n        const sfx = Sfx.play(\"cog\", true);\r\n        sfx.mixer.gain.value = 0;\r\n        this.sfx = sfx;\r\n    }\r\n\r\n    stop() {\r\n        this.sfx.stop();\r\n    }\r\n\r\n    /**\r\n     * @param {Draw} draw\r\n     */\r\n    pre(draw) {\r\n        const line = this.line;\r\n        if (line) {\r\n            draw.begin()\r\n                .to(line.begin)\r\n                .line(line.end.clone().sub(line.begin))\r\n                .stroke(0, 6)\r\n                .end();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {Draw} draw\r\n     */\r\n    render(draw) {\r\n        const pos = this.pos.clone().sub(this.size);\r\n        const frame = Math.round(this.frame) % 3;\r\n        draw.sprite(frame * 32, 72, 32, 32, pos.x, pos.y);\r\n    }\r\n\r\n    /**\r\n     * @param {Hero} hero\r\n     */\r\n    update(hero) {\r\n        let pos = this.pos,\r\n            line = this.line,\r\n            speed = this.speed;\r\n        if (line) {\r\n            pos.add(line.vec.clone().multiply(speed));\r\n            let lineDist = pos.clone().sub(line.end).mag();\r\n            if (lineDist < speed) {\r\n                pos = line.end.clone();\r\n                this.line = new Line(line.end, line.begin);\r\n            }\r\n        }\r\n        \r\n        let dist = hero.pos.clone().sub(pos).mag(),\r\n            gain = 1 - dist / 150;\r\n        this.sfx.mixer.gain.value = gain > 0 ? gain : 0;\r\n        if (dist < this.size + hero.size) {\r\n            hero.alive = false;\r\n        }\r\n        this.frame += .5;\r\n    }\r\n\r\n}","/**\r\n * Door and key\r\n */\r\nclass Door extends Item {\r\n\r\n    /**\r\n     * @param {Vec} pos\r\n     * @param {Vec} key\r\n     */\r\n    constructor(pos, key) {\r\n        super(pos);\r\n        this.key = key || false;\r\n        this.open = key ? false : true;\r\n        this.size = 12;\r\n    }\r\n\r\n    /**\r\n     * @param {Draw} draw\r\n     */\r\n    render(draw) {\r\n        const pos = new Vec(-12, -16).add(this.pos);\r\n        draw.sprite(this.key ? 0 : 24, 104, 24, 32, pos.x, pos.y);\r\n        if (this.key) {\r\n            const key = new Vec(-12, -16).add(this.key);\r\n            draw.sprite(48, 104, 24, 32, key.x, key.y);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {Hero} hero\r\n     * @param {Room} room\r\n     */\r\n    update(hero) {\r\n        let result = false;\r\n        if (!this.key) {\r\n            result = hero.pos.clone().sub(this.pos).mag() < this.size;\r\n        } else if (hero.pos.clone().sub(this.key).mag() < this.size) {\r\n            Sfx.play(\"key\");\r\n            this.key = false;\r\n        }\r\n        if (result) {\r\n            this.open = true;\r\n        }\r\n        return result;\r\n    }\r\n\r\n}","/**\r\n * The Infected Ones\r\n */\r\nclass Evil extends Item {\r\n\r\n    /**\r\n     * @param {Vec} pos\r\n     */\r\n    constructor(pos) {\r\n        super(pos);\r\n        this.size = 12;\r\n        this.speed = new Vec();\r\n        this.velociy = .5;\r\n        this.collide = new Vec();\r\n    }\r\n\r\n    /**\r\n     * @param {Hero} hero\r\n     * @param {Room} room\r\n     */\r\n    update(hero, room) {\r\n        this.speed = hero.pos.clone().sub(this.pos).bit().multiply(this.velociy);\r\n        this.pos.x += this.speed.x;\r\n        this.collide.y = room.collide(this.pos, this.size);\r\n        this.pos.y += this.speed.y;\r\n        this.collide.x = room.collide(this.pos, this.size);\r\n        if (hero.pos.clone().sub(this.pos).mag() < this.size + hero.size) {\r\n            hero.alive = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {Draw} draw\r\n     */\r\n    render(draw) {\r\n        const pos = this.pos.clone().sub(12);\r\n        const vec = this.speed.clone().bit();\r\n        if (this.collide.x) {\r\n            vec.y = 0;\r\n        }\r\n        if (this.collide.y) {\r\n            vec.x = 0;\r\n        }\r\n        vec.multiply(24);\r\n        draw.sprite(vec.x + 120, vec.y + 24, 24, 24, pos.x, pos.y);\r\n    }\r\n\r\n}","/**\r\n * The Gate\r\n */\r\nclass Gate extends Door {\r\n\r\n    /**\r\n     * @param {Vec} pos\r\n     * @param {Number} time\r\n     */\r\n    constructor(pos, time) {\r\n        super(pos);\r\n        this.size = 32;\r\n        this.time = time;\r\n    }\r\n\r\n    /**\r\n     * @param {Draw} draw\r\n     */\r\n    pre(draw) {\r\n        const pos = this.pos.clone().sub(36, 28);\r\n        const sky = draw.glin(\"#09c\", \"#cff\", 0, 0, 0, 64);\r\n        const min = Math.floor(this.time / 60000) + 100 + \"\";\r\n        const sec = Math.floor(this.time / 1000) % 60 + 100 + \"\";\r\n        const time = min.substr(-2) + \":\" + sec.substr(-2);\r\n        draw.begin()\r\n            .to(pos)\r\n            .rect(72, 64, sky)\r\n            .to(1, 1)\r\n            .rect(34, 62)\r\n            .stroke(0, 2)\r\n            .to(36, 0)\r\n            .rect(34, 62)\r\n            .stroke(0, 2)\r\n            .to(-1, 36)\r\n            .ngon(6, 10)\r\n            .stroke(0, 2)\r\n            .to(-20, -60)\r\n            .text(time, 4, 0)\r\n            .end();\r\n    }\r\n\r\n    /**\r\n     * @param {Draw} draw\r\n     */\r\n    render(draw) {}\r\n\r\n}","/**\r\n * Theodor\r\n */\r\nclass Hero extends Item {\r\n\r\n    /**\r\n     * @param {Vec} pos\r\n     * @param {Vec} bound\r\n     */\r\n    constructor(pos, bound) {\r\n        super(pos);\r\n        this.size = 12;\r\n        this.bound = bound;\r\n        this.alive = true;\r\n        this.speed = new Vec();\r\n        this.minSpeed = new Vec();\r\n        this.maxSpeed = new Vec(3, 5);\r\n        this.velocity = new Vec(.1, .15);\r\n        this.jumpSpeed = new Vec(3, -5);\r\n        this.collide = new Vec();\r\n    }\r\n\r\n    /**\r\n     * @param {Draw} draw\r\n     */\r\n    render(draw) {\r\n        const pos = this.pos.clone().sub(12);\r\n        let vec = new Vec(72, 0);\r\n        if (this.alive) {\r\n            vec = this.speed.clone().bit();\r\n            if (this.collide.x) {\r\n                vec.y = 0;\r\n            }\r\n            if (this.collide.y) {\r\n                vec.x = 0;\r\n            }\r\n            vec.multiply(24).add(24);\r\n        }\r\n        draw.sprite(vec.x, vec.y, 24, 24, pos.x, pos.y);\r\n    }\r\n\r\n    /**\r\n     * @param {Room} room\r\n     */\r\n    update(room) {\r\n        const pos = this.pos;\r\n        const size = this.size;\r\n        const speed = this.speed;\r\n        const bound = this.bound;\r\n        const collide = new Vec();\r\n        this.speed.add(this.velocity).max(this.maxSpeed),\r\n        pos.x += speed.x;\r\n        collide.y = room.collide(pos, size, true);\r\n        pos.y += speed.y;\r\n        collide.x = room.collide(pos, size, true);\r\n        if (!this.sfx && speed.y > 0 && collide.x != collide.y) {\r\n            this.sfx = Sfx.play(\"slide\", true);\r\n        } else if (collide.x == collide.y) {\r\n            this.stop();\r\n        }\r\n        if (collide.x || (collide.y && !this.collide.y)) {\r\n            speed.y = this.minSpeed.y;\r\n        } \r\n        this.collide = collide;\r\n        if (\r\n            pos.x < -size ||\r\n            pos.y < -size || \r\n            pos.x > bound.x + size ||\r\n            pos.y > bound.y + size\r\n        ) {\r\n            this.alive = false;\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        if (this.sfx) {\r\n            this.sfx.stop();\r\n            this.sfx = false;\r\n        }\r\n    }\r\n\r\n    turn() {\r\n        this.velocity.x = -this.velocity.x;\r\n        this.speed.x = -this.speed.x;\r\n    }\r\n\r\n    jump() {\r\n        const collide = this.collide;\r\n        if (collide.x || collide.y) {\r\n            this.speed.y = this.jumpSpeed.y;\r\n            if (collide.y && !collide.x) {\r\n                this.turn();\r\n            }\r\n            Sfx.play(\"jump\");\r\n            if (this.srcSlide) {\r\n                this.srcSlide.stop();\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","/**\r\n * Mr Rodman\r\n */\r\nclass Rod extends Item {\r\n\r\n    /**\r\n     * @param {Draw} draw\r\n     */\r\n    pre(draw) {\r\n        const pos = this.pos.clone().sub(12);\r\n        draw.begin()\r\n            .to(pos.x, pos.y - 10)\r\n            .text([\"Skipping classes\", \"again, Theodor?\"], 0, 5, 1)\r\n            .end();\r\n    }\r\n\r\n    /**\r\n     * @param {Draw} draw\r\n     */\r\n    render(draw) {\r\n        const pos = this.pos.clone().sub(12);\r\n        draw.sprite(168, 0, 24, 48, pos.x, pos.y);\r\n    }\r\n\r\n}","/**\r\n * The room\r\n */\r\nclass Room {\r\n\r\n    /**\r\n     * @param {Number} grid\r\n     * @param {number} margin\r\n     */\r\n    constructor(grid, margin) {\r\n        this.grid = grid;\r\n        this.margin = margin;\r\n        this.dots = [];\r\n        this.lines = [];\r\n        this.glitch = [];\r\n    }\r\n\r\n    /**\r\n     * Add walls \r\n     * @param {Number[]} data\r\n     */\r\n    map(data) {\r\n        const grid = this.grid;\r\n        const margin = this.margin;\r\n        const lines = this.lines;\r\n        const dots = [];\r\n        let i = 0,\r\n            j = 0,\r\n            x = data[0] * grid,\r\n            y = data[1] * grid;\r\n        dots.push(new Vec(x, y).add(margin));\r\n        for (i = 1; i < data.length - 1; i++) {\r\n            if (i % 2) {\r\n                x = data[i + 1] * grid;\r\n            } else {\r\n                y = data[i + 1] * grid;\r\n            }\r\n            dots.push(new Vec(x, y).add(margin));\r\n            lines.push(new Line(dots[j], dots[++j]));\r\n        }\r\n        lines.push(new Line(dots[j], dots[0]));\r\n        this.dots.push(dots);\r\n    }\r\n\r\n    /**\r\n     * @param {Draw} draw\r\n     */\r\n    pre(draw) {\r\n        const color = \"rgba(0,0,0,.1)\";\r\n        let w = draw.ctx.canvas.width,\r\n            h = draw.ctx.canvas.height;\r\n        draw.begin().rect(w, h, \"#420\");\r\n        for (let i = 0; i < this.dots.length; i++) {\r\n            draw.path(this.dots[i]).fill(i ? \"#420\" : \"#fec\").stroke(0, 2);\r\n        }\r\n        for (let i = 0; i < 100; i++) {\r\n            let width = Math.round(Math.rnd(8, 10)),\r\n                height = Math.round(Math.rnd(4, 6)),\r\n                x = Math.round(Math.rnd(0, w - width)),\r\n                y = Math.round(Math.rnd(0, h - height));\r\n            draw.begin()\r\n                .to(x, y)\r\n                .rect(width, height, color)\r\n                .end();\r\n        }\r\n        draw.end();\r\n        for (let i = 0; i < this.glitch.length; i++) {\r\n            let line = this.lines[this.glitch[i]];\r\n            draw.begin()\r\n                .to(line.begin)\r\n                .line(line.end.clone().sub(line.begin))\r\n                .shadow(\"#c0c\")\r\n                .stroke(\"#c0c\", 3)\r\n                .end();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check wall collides\r\n     * @param {Vec} pos\r\n     * @param {Number} size\r\n     * @param {Boolean} glitch\r\n     */\r\n    collide(pos, size, glitch) {\r\n        let collide = 0;\r\n        for (let i = 0; i < this.lines.length; i++) {\r\n            if (glitch && this.glitch.indexOf(i) > -1) {\r\n                continue;\r\n            }\r\n            let line =  this.lines[i],\r\n                dot = line.project(pos),\r\n                vec = pos.clone().sub(dot),\r\n                distance = vec.mag();\r\n            if (distance < size) {\r\n                pos.add(vec.clone().div(distance).multiply(size - distance));\r\n                collide = 1;\r\n            }\r\n        }\r\n        return collide;\r\n    }\r\n\r\n}\r\n","/**\r\n * Window\r\n */\r\nclass Win extends Item {\r\n\r\n    /**\r\n     * @param {Draw} draw\r\n     */\r\n    pre(draw) {\r\n        const pos = this.pos;\r\n        const sky = draw.glin(\"#09c\", \"#cff\", 0, 0, 0, 24);\r\n        draw.begin()\r\n            .to(pos.x - 16, pos.y - 12)\r\n            .rect(32, 24, sky)\r\n            .to(1, 1)\r\n            .rect(10, 22)\r\n            .stroke(0, 2)\r\n            .to(10, 0)\r\n            .rect(10, 22)\r\n            .stroke(0, 2)\r\n            .to(10, 0)\r\n            .rect(10, 22)\r\n            .stroke(0, 2)\r\n            .end();\r\n    }\r\n\r\n}","/**\r\n * Line math\r\n */\r\nclass Line {\r\n\r\n    /**\r\n     * @param {Vec} begin\r\n     * @param {Vec} end\r\n     */\r\n    constructor(begin, end) {\r\n        this.begin = begin;\r\n        this.end = end;\r\n        this.vec = end.clone().sub(begin).norm();\r\n    }\r\n\r\n    /**\r\n     * Dot projection\r\n     * @param {Vec} dot\r\n     * @returns {Vec}\r\n     */\r\n    project(dot) {\r\n        let param = -1;\r\n        const a = dot.clone().sub(this.begin);\r\n        const b = this.end.clone().sub(this.begin);\r\n        if (!this.begin.eq(this.end)) {\r\n            param = (a.x * b.x + a.y * b.y) / (b.x * b.x + b.y * b.y);\r\n        }\r\n        if (param < 0) {\r\n            return this.begin.clone();\r\n        } else if (param > 1) {\r\n            return this.end.clone();\r\n        }\r\n        return b.clone().multiply(param).add(this.begin);\r\n    }\r\n}\r\n","/**\r\n * 2D Vector math\r\n */\r\nclass Vec {\r\n\r\n    /**\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     */\r\n    constructor(x, y) {\r\n        this.x = x || 0;\r\n        this.y = y || 0;\r\n    }\r\n\r\n    /**\r\n     * @returns {Vec}\r\n     */\r\n    clone() {\r\n        return new Vec(this.x, this.y);\r\n    }\r\n\r\n    /**\r\n     * @param {Vec} vec\r\n     * @returns {Boolean}\r\n     */\r\n    eq(vec) {\r\n        return this.x == vec.x && this.y == vec.y;\r\n    }\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    mag() {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y);\r\n    }\r\n\r\n    /**\r\n     * @param {Vec} vec\r\n     * @returns {Vec}\r\n     */\r\n    max(vec) {\r\n        if (this.x > vec.x) {\r\n            this.x = vec.x;\r\n        }\r\n        if (this.x < -vec.x) {\r\n            this.x = -vec.x;\r\n        }\r\n        if (this.y > vec.y) {\r\n            this.y = vec.y;\r\n        }\r\n        if (this.y < -vec.y) {\r\n            this.y = -vec.y;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @returns {Vec}\r\n     */\r\n    add(x, y) {\r\n        if (x instanceof Vec) {\r\n            y = x.y;\r\n            x = x.x;\r\n        }\r\n        if (y === undefined) {\r\n            y = x;\r\n        }\r\n        this.x += x;\r\n        this.y += y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @returns {Vec}\r\n     */\r\n    sub(x, y) {\r\n        if (x instanceof Vec) {\r\n            y = x.y;\r\n            x = x.x;\r\n        }\r\n        if (y === undefined) {\r\n            y = x;\r\n        }\r\n        this.x -= x;\r\n        this.y -= y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @returns {Vec}\r\n     */\r\n    div(x, y) {\r\n        if (x instanceof Vec) {\r\n            y = x.y;\r\n            x = x.x;\r\n        }\r\n        if (y === undefined) {\r\n            y = x;\r\n        }\r\n        this.x = x > 0 ? this.x / x : 0;\r\n        this.y = y > 0 ? this.y / y : 0;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @returns {Vec}\r\n     */\r\n    multiply(x, y) {\r\n        if (x instanceof Vec) {\r\n            y = x.y;\r\n            x = x.x;\r\n        }\r\n        if (y === undefined) {\r\n            y = x;\r\n        }\r\n        this.x *= x;\r\n        this.y *= y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @returns {Vec}\r\n     */\r\n    invert() {\r\n        this.x = -this.x;\r\n        this.y = -this.y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @returns {Vec}\r\n     */\r\n    norm() {\r\n        this.div(this.mag());\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @returns {Vec}\r\n     */\r\n    zero() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @returns {Vec}\r\n     */\r\n    bit() {\r\n        this.x = this.x > 0 ? 1 : this.x < 0 ? -1 : 0;\r\n        this.y = this.y > 0 ? 1 : this.y < 0 ? -1 : 0;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @returns {Vec}\r\n     */\r\n    round() {\r\n        this.x = Math.round(this.x);\r\n        this.y = Math.round(this.y);\r\n        return this;\r\n    }\r\n\r\n}\r\n","const game = new Game(\r\n    new Draw($(\"#game\").getContext(\"2d\")),\r\n    [\r\n        \"M3,7,7,6,3|H4,6|D5,6|W6,6|#The door is open.|#I have to escape!\",\r\n        \"M4,8,6,3,8,1,2,3,4|H4,7|D7,2|#I can jump up walls!\",\r\n        \"M0,0,10,10,0|M1,1,9,9,1,3,7,7,3,5,4,6,6,4,2,8,8,2,1|H1,0|D2,0,5,5|#The door is locked.|#I need a key!\",\r\n        \"M0,10,10,0,0|M2,9,6,2,8,1,4,8,2|G7,11|H0,9|D7,0,3,7|#This wall has no texture!|#Is it a glitch?\",\r\n        \"M0,0,10,10,0|M2,2,4,6,6,2,8,8,2|H4,9,1|D2,9,3.8,5|B6,9|#Uh-oh! The Sentinel.|#Can't jump through him.\",\r\n        \"M0,0,1,2,4,6,5,1,2,0,6,4,7,2,9,1,7,0,10,3,8,4,10,7,8,9,9,8,10,10,7,6,9,5,6,10,0,7,3,3,1,4,2,6,1,5,0|M1,8,4,7,5,9,1|H8,9,1|D6.8,0,1.2,5|#I can get out through|#the Libraryinth.\",\r\n        \"M0,10,10,0,0|M1,1,3,3,4,1,6,3,7,1,9,5,8,9,7,4,3,9,2,5,1|M4,6,6,8,4|H1,0|D4,0,5,5|E1,5|E8,5|#What was that noise...\",\r\n        \"M0,0,10,10,0|M1,1,9,5,8,2,5,3,7,7,3,5,4,6,6,4,3,3,4,2,2,8,8,6,9,9,1|M6,0,7,1,6|M7,6,8,7,7|H4,0,1|D5,5,7,0|G26,19|#Oh no, dead-end!\",\r\n        \"M0,10,10,7,1,6,10,3,1,2,10,1,0,4,9,5,0,8,9,9,0|C3,9|C5,9|C7,9|C3,5|C5,5|C7,5|C3,1|C5,1|C7,1|H1,9|D0,9,9,1|#Through the Basement.|#Jump over the cogs.\",\r\n        \"M0,0,10,10,0|M1,2,4,3,1|M6,2,9,3,6|M1,4,2,6,1|M3,4,7,6,3|M8,4,9,6,8|M1,7,3,8,7,7,9,8,8,9,2,8,1|H2,1|D7,1,5,9|E2,3|E7,3|#The Infected Ones.|#They got me!\",\r\n        \"M0,10,10,0,0|M1,1,9,2,6,8,9,9,1,8,4,2,1|G5,9,11,15|H6,7|D3,7,8,0|C3,5,0,5|C6,5,9,5|C3,0|C6,0|E1,0|#Almost there...|#Where's the exit?\",\r\n        \"M0,2,1,1,2,2,3,1,4,2,5,1,6,2,7,1,8,2,9,1,10,9,9,8,8,10,7,8,6,10,5,8,4,10,3,8,2,10,1,8,0,7,1,6,2,7,3,6,4,7,5,6,6,7,7,6,8,7,9,3,8,5,7,3,6,5,5,3,4,5,3,3,2,5,1,3,0|H8,7|D-.2,2,-.2,7|C1,4|C3,4|C5,4|C7,4|C1,9|C3,9|C5,9|C7,9|#Oops, wrong turn.|#Great. More cogs.\",\r\n        \"M0,0,10,2,8,3,10,4,9,5,10,7,8,8,10,10,0,8,1,7,0,5,2,4,0,2,1,1,0|M2,2,4,3,2|M5,3,7,4,5|M3,5,5,6,3|M6,5,8,6,6|M2,8,4,9,2|M5,8,7,9,5|H1,9|D8,9,0,0|E9,3|E0,3|#Too quiet. I have a bad|#feeling about this.\",\r\n        \"M0,0,10,10,8,2,1,6,7,8,6,7,5,8,1,9,7,10,0|H8,9|D6,9,5,6|C8,8|C9,7|C8,6|C9,5|C8,4|C9,3|C8,2|C9,1|E6,7|#Double trouble.|#Even better.\",\r\n        \"M0,10,2,2,4,10,10,4,9,2,10,0,8,8,6,0,0,2,1,4,0|H0,9|D-.2,1,9.2,1|C2,1,5,1|C4,9,7,9|#The Workshop.|#Might be tricky.\",\r\n        \"M0,0,10,10,0|M1,3,2,2,3,1,7,2,8,3,9,7,8,8,7,9,6,7,7,6,8,4,7,3,6,2,4,3,3,4,2,6,3,7,4,9,3,8,2,7,1|M4,4,6,6,4|H4,0|D5,0,4,3|C2,1,0,1|C7,1,9,1|C1,7,1,9|C8,7,8,9|#Hope I get out|#in one piece.\",\r\n        \"M0,0,2,1,8,0,10,2,9,8,10,10,8,9,2,10,0,8,1,2,0|M2,2,4,3,3,5,2|M5,2,8,4,7,3,5|M2,6,3,7,5,8,2|M7,5,8,8,6,7,7|H0,9|D9.2,9,-.2,1|B9,1|#The Sentinel is on my|#track. Gotta hurry!\",\r\n        \"M0,0,3,2,4,0,5,1,6,0,9,2,10,3,9,5,10,6,9,8,10,9,9,10,6,8,5,10,4,9,3,10,0|M1,1,2,3,1|M1,4,2,6,1|M1,7,2,9,1|M3,3,4,5,3|M3,6,4,8,3|M5,2,6,4,5|M5,5,6,7,5|M7,1,8,3,7|M7,4,8,6,7|M7,7,8,9,7|H1,9|D5,4,7,0|C2,1.7,4,1.7|C6,5.7,8,5.7|#Jump around the Gym|#and I'll be at the Gates.\",\r\n        \"M0,10,4,9,2,1,8,2,3,3,8,4,3,7,8,6,4,5,9,10,10,0,0|G5,9|H2,0|D7,6,3,9|C4,0,5,0|E5,6|B0,0|W6,6|#Final test. Tough,|#but I'm almost out.\",\r\n        \"M2,4,8,6,2|H4,5|X5,5|R3,5|#Hello Mr Rodman.\"\r\n    ],\r\n    new Camera($(\"#cam\").getContext(\"2d\"), 300, \"#420\")\r\n);\r\n\r\nfunction update() {\r\n    game.update(); \r\n    game.render();\r\n    requestAnimationFrame(update);\r\n}\r\n\r\non(document, \"mousedown,touchstart\", (e) => {\r\n    e.preventDefault();\r\n    game.tap();\r\n});\r\n\r\non(document, \"keydown\", (e) => {\r\n    if (e.keyCode == 32) {\r\n        e.preventDefault();\r\n        game.tap();\r\n    }\r\n});\r\n\r\non(window, \"resize\", () => {\r\n    game.cam.resize();\r\n});\r\n\r\nnew Icon($(\"#icon\").getContext(\"2d\")).render(function() {\r\n    $(\"link[rel=apple-touch-icon]\").href = this.src;\r\n    $(\"link[rel=icon]\").href = this.src;\r\n});\r\n\r\nnew Sprite(game.draw).render(() => {\r\n    game.load();\r\n    update();\r\n});\r\n"],"sourceRoot":"/source/"}